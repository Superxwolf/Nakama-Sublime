{
	"autocomplete":
	[
		["account_update_id\tFunction", "account_update_id(${1:user_id}, ${2:metadata}, ${3:username}, ${4:display_name}, ${5:timezone}, ${6:location}, ${7:language}, ${8:avatar_url})"],
		["aes128_decrypt\tFunction", "aes128_decrypt(${1:input}, ${2:key})"],
		["aes128_encrypt\tFunction", "aes128_encrypt(${1:input}, ${2:key})"],
		["authenticate_custom\tFunction", "authenticate_custom(${1:id}, ${2:username}, ${3:create})"],
		["authenticate_device\tFunction", "authenticate_device(${1:id}, ${2:username}, ${3:create})"],
		["authenticate_email\tFunction", "authenticate_email(${1:email}, ${2:password}, ${3:username}, ${4:create})"],
		["authenticate_facebook\tFunction", "authenticate_facebook(${1:token}, ${2:import}, ${3:username}, ${4:create})"],
		["authenticate_gamecenter\tFunction", "authenticate_gamecenter(${1:player_id}, ${2:bundle_id}, ${3:timestamp}, ${4:salt}, ${5:signature}, ${6:public_key_url}, ${7:username}, ${8:create})"],
		["authenticate_google\tFunction", "authenticate_google(${1:token}, ${2:username}, ${3:create})"],
		["authenticate_steam\tFunction", "authenticate_steam(${1:token}, ${2:username}, ${3:create})"],
		["authenticate_token_generate\tFunction", "authenticate_token_generate(${1:user_id}, ${2:username})"],
		["base16_decode\tFunction", "base16_decode(${1:input})"],
		["base16_encode\tFunction", "base16_encode(${1:input})"],
		["base64_decode\tFunction", "base64_decode(${1:input})"],
		["base64_encode\tFunction", "base64_encode(${1:input})"],
		["base64url_decode\tFunction", "base64url_decode(${1:input})"],
		["base64url_encode\tFunction", "base64url_encode(${1:input})"],
		["bcrypt_hash\tFunction", "bcrypt_hash(${1:input})"],
		["bcrypt_compare\tFunction", "bcrypt_compare(${1:hash}, ${2:plaintext})"],
		["cron_next\tFunction", "cron_next(${1:expression}, ${2:timestamp})"],
		["group_create\tFunction", "group_create(${1:user_id}, ${2:name}, ${3:creator_id}, ${4:lang}, ${5:description}, ${6:avatar_url}, ${7:open}, ${8:metadata}, ${9:max_count})"],
		["group_delete\tFunction", "group_delete(${1:group_id})"],
		["group_update\tFunction", "group_update(${1:group_id}, ${2:name}, ${3:creator_id}, ${4:lang}, ${5:description}, ${6:avatar_url}, ${7:open}, ${8:metadata}, ${9:max_count})"],
		["group_users_list\tFunction", "group_users_list(${1:group_id})"],
		["groups_get_id\tFunction", "groups_get_id(${1:group_ids})"],
		["user_groups_list\tFunction", "user_groups_list(${1:user_id})"],
		["hmac_sha256_hash\tFunction", "hmac_sha256_hash(${1:input}, ${1:key})"],
		["http_request\tFunction", "http_request(${1:url}, ${1:method}, ${2:headers}, ${3:content})"],
		["json_decode\tFunction", "json_decode(${1:input})"],
		["json_encode\tFunction", "json_encode(${1:input})"],
		["leaderboard_create\tFunction", "leaderboard_create(${1:id}, ${2:authoritative}, ${3:sort}, ${4:operator}, ${5:reset}, ${6:metadata})"],
		["leaderboard_delete\tFunction", "leaderboard_delete(${1:id})"],
		["leaderboard_record_write\tFunction", "leaderboard_record_write(${1:id}, ${2:owner}, ${3:username}, ${4:score}, ${5:subscore}, ${6:metadata})"],
		["leaderboard_record_delete\tFunction", "leaderboard_record_delete(${1:id}, ${2:owner})"],
		["leaderboard_records_list\tFunction", "leaderboard_records_list(${1:id}, ${2:owners}, ${3:limit}, ${4:cursor})"],
		["logger_error\tFunction", "logger_error(${1:message})"],
		["logger_info\tFunction", "logger_info(${1:message})"],
		["logger_warn\tFunction", "logger_warn(${1:message})"],
		["match_create\tFunction", "match_create(${1:module}, ${2:params})"],
		["match_list\tFunction", "match_list(${1:limit}, ${2:authoritative}, ${3:label}, ${4:min_size}, ${5:max_size})"],
		["notification_send\tFunction", "notification_send(${1:user_id}, ${2:subject}, ${3:content}, ${4:code}, ${5:sender_id}, ${6:persistent})"],
		["notifications_send\tFunction", "notifications_send(${1:new_notifications})"],
		["register_matchmaker_matched\tFunction", "register_matchmaker_matched(${1:func})"],
		["register_req_after\tFunction", "register_req_after(${1:func}, ${2:msgname})"],
		["register_req_before\tFunction", "register_req_before(${1:func}, ${2:msgname})"],
		["register_rt_after\tFunction", "register_rt_after(${1:func}, ${2:msgname})"],
		["register_rt_before\tFunction", "register_rt_before(${1:func}, ${2:msgname})"],
		["register_rpc\tFunction", "register_rpc(${1:func}, ${2:id})"],
		["run_once\tFunction", "run_once(${1:func})"],
		["storage_read\tFunction", "storage_read(${1:object_ids})"],
		["storage_list\tFunction", "storage_list(${1:user_id}, ${2:collection}, ${3:limit}, ${4:cursor})"],
		["storage_delete\tFunction", "storage_delete(${1:object_ids})"],
		["storage_update\tFunction", "storage_update(${1:record_keys})"],
		["storage_write\tFunction", "storage_write(${1:new_objects})"],
		["sql_exec\tFunction", "sql_exec(${1:query}, ${2:parameters})"],
		["sql_query\tFunction", "sql_query(${1:query}, ${2:parameters})"],
		["time\tFunction", "time()"],
		["tournament_create\tFunction", "tournament_create(${1:id}, ${2:sort}, ${3:operator}, ${4:duration}, ${5:reset}, ${6:metadata}, ${7:title}, ${8:description}, ${9:category}, ${10:start_time}, ${11:end_time}, ${12:max_size}, ${13:max_num_score}, ${14:join_required})"],
		["tournament_delete\tFunction", "tournament_delete(${1:id})"],
		["tournament_add_attempt\tFunction", "tournament_add_attempt(${1:id}, ${2:owner}, ${3:count})"],
		["tournament_join\tFunction", "tournament_join(${1:id}, ${1:user_id}, ${2:username})"],
		["tournament_list\tFunction", "tournament_list(${1:category_start}, ${2:category_end}, ${3:start_time}, ${4:end_time}, ${5:limit}, ${6:cursor})"],
		["tournament_record_write\tFunction", "tournament_record_write(${1:id}, ${2:owner}, ${3:username}, ${4:score}, ${5:subscore}, ${6:metadata})"],
		["tournament_records_haystack\tFunction", "tournament_records_haystack(${1:id}, ${2:owner}, ${3:limit})"],
		["users_get_id\tFunction", "users_get_id(${1:user_ids})"],
		["users_get_username\tFunction", "users_get_username(${1:usernames})"],
		["users_ban_id\tFunction", "users_ban_id(${1:user_ids})"],
		["users_unban_id\tFunction", "users_unban_id(${1:user_ids})"],
		["uuid_v4\tFunction", "uuid_v4()"],
		["uuid_bytes_to_string\tFunction", "uuid_bytes_to_string(${1:uuid_bytes})"],
		["uuid_string_to_bytes\tFunction", "uuid_string_to_bytes(${1:uuid_string})"],
		["wallet_update\tFunction", "wallet_update(${1:user_id}, ${1:changeset}, ${2:metadata}, ${3:update_ledger})"],
		["wallets_update\tFunction", "wallets_update(${1:updates}, ${2:update_ledger})"],
		["wallet_ledger_list\tFunction", "wallet_ledger_list(${1:user_id})"],
		["wallet_ledger_update\tFunction", "wallet_ledger_update(${1:id}, ${2:metadata})"]
	]
}